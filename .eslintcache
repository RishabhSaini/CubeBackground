[{"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/index.js":"1","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/App.js":"2","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/reportWebVitals.js":"3","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/CardComp.js":"4","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/ModalPopupProjects.js":"5","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/ModalPopupWork.js":"6","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/ModalPopupAboutMe.js":"7","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/AboutMe/AboutMe.js":"8","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Background/Fibre.js":"9","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/NavBar/NavBar.js":"10","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Background/ColorMaterial.js":"11","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Projects/Projects.js":"12","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Projects/FeaturedProject.js":"13"},{"size":500,"mtime":1610131574268,"results":"14","hashOfConfig":"15"},{"size":419,"mtime":1610520810441,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610131574268,"results":"17","hashOfConfig":"15"},{"size":4205,"mtime":1610496932064,"results":"18","hashOfConfig":"15"},{"size":5911,"mtime":1610267207518,"results":"19","hashOfConfig":"15"},{"size":5492,"mtime":1610231478597,"results":"20","hashOfConfig":"15"},{"size":5087,"mtime":1610493444102,"results":"21","hashOfConfig":"15"},{"size":4423,"mtime":1610520627312,"results":"22","hashOfConfig":"15"},{"size":4577,"mtime":1610518206531,"results":"23","hashOfConfig":"15"},{"size":769,"mtime":1610524380949,"results":"24","hashOfConfig":"15"},{"size":1498,"mtime":1610518170711,"results":"25","hashOfConfig":"15"},{"size":5277,"mtime":1610524100640,"results":"26","hashOfConfig":"15"},{"size":6923,"mtime":1610523294001,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1vkyf86",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/index.js",[],["60","61"],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/App.js",[],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/reportWebVitals.js",[],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/CardComp.js",["62"],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/ModalPopupProjects.js",[],["63","64"],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/ModalPopupWork.js",[],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/ModalPopupAboutMe.js",["65"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdClose } from \"react-icons/md\";\nimport \"./ModalPopup.css\";\n\nconst ModalPopupAboutMe = ({ showModalAboutMe, setModalShowAboutMe }) => {\n  return (\n    <>\n      {showModalAboutMe ? (\n        <Background>\n          <ModalWrapper>\n            <CloseModalButton\n          \n              onClick={() => setModalShowAboutMe((prev) => !prev)}\n            >X</CloseModalButton>\n            <ModalContent>\n              <div className=\"grid-container\">\n                <StyledButton>\n                  <div className=\" \">\n                    <h4>Blockchain Fundraising Platform</h4>\n                    <p>\n                      Designed a Decentralized Ethereum application and applied\n                      concepts of test driven development to create a secure\n                      auctioning platform\n                    </p>\n                  </div>\n                </StyledButton>\n\n                <StyledButton>\n                  <div className=\" \">\n                    <h4>LEEV: Electric Vehicle Power Stations Renting</h4>\n                    <p>\n                      A 4 month project to design the application architecture\n                      for renting electric vehicles charging station in\n                      Downtown, Toronto. Our business client was a UofT alumni\n                      in North York.\n                    </p>\n                  </div>\n                </StyledButton>\n\n                <StyledButton>\n                  <div className=\"\">\n                    <h4>Personal Website</h4>\n                    <p>\n                      Designed the website you are currently viewing using React\n                      and used WebGL rendering for the beautiful animation at\n                      the background\n                    </p>\n                  </div>\n                </StyledButton>\n\n                <StyledButton>\n                  <div className=\" \">\n                    <h4>Reversi/Othello</h4>\n                    <p>\n                      Utilized minimax algorithm with alpha beta pruning and\n                      weighted matrix to create a Reversi bot with response time\n                      under 1 second\n                    </p>\n                  </div>\n                </StyledButton>\n\n                <StyledButton>\n                  <div className=\"\">\n                    <h4>Maskaught</h4>\n                    <p>\n                      A mask detection designed to be placed outside shops. It\n                      utilizes deep learning using tensorflow to train and\n                      predict data and Django to create the backend for the web\n                      application.\n                    </p>\n                  </div>\n                </StyledButton>\n\n                <StyledButton>\n                  <div className=\" \">\n                    <h4>Eye Can See</h4>\n                    <p>\n                      A 20/20 vision testing system that utilizes an speech\n                      recognition system and an arduino board integration. See\n                      project EYE CAN SEE\n                    </p>\n                  </div>\n                </StyledButton>\n\n                <StyledButton>\n                  <div className=\" \">\n                    <h4>ResumaBuilder</h4>\n                    <p>\n                      Resumabuilder allows you to compare your current resume to\n                      your ideal resume, it also gives you a progress tracker to\n                      achieve the perfect resume that you want.\n                    </p>\n                  </div>\n                </StyledButton>\n              </div>\n            </ModalContent>\n          </ModalWrapper>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n\nexport default ModalPopupAboutMe;\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst ModalWrapper = styled.div`\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #d7c58d;\n  color: #000;\n  position: absolute;\n  z-index: 4;\n  border-radius: 10px;\n  margin: 5% 12.5%;\n  overflow: auto;\n  ::-webkit-scrollbar {\n    width: 0.5em;\n  }\n\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  justify-content: space-around;\n  h4 {\n    font-size: 1.5em;\n    color: #ff2281;\n  }\n  p {\n    margin-bottom: 1rem;\n    font-size: 1em;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled.button`\n  padding: 10px;\n  margin: 10px;\n  z-index: 10;\n  border-radius: 10px;\n  background-color: #add8e6;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  border: none;\n  background: #141414;\n  color: #fff;\n  cursor: pointer;\n  margin: 0.3em;\n`;\n","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/AboutMe/AboutMe.js",["66","67","68","69","70","71"],"import React from \"react\";\nimport { Element } from \"react-scroll\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Typical from \"react-typical\";\n\nconst AboutMe = () => {\n  return (\n    <Element id=\"DestaboutMe\" name=\"DestaboutMe\">\n      <AboutComp id=\"about\">\n        <Container>\n          <ThemeProvider theme={theme}>\n            <Content>\n              <Typical\n                steps={[\n                  \"Welcome\",\n                  1000,\n                  \"I am Rishabh\",\n                  3000,\n                  \"I am a Designer\",\n                  2000,\n                  \"I am a Creator\",\n                  2000,\n                  \"I am a Thinker\",\n                  2000,\n                  \"I am a Developer\",\n                  2000,\n                  \"I am a Innovator\",\n                  2000,\n                  \"I am a Inventor\",\n                  2000,\n                ]}\n                loop={Infinity}\n                wrapper=\"h1\"\n                className=\"\"\n              />\n              <Descriptions>\n                <Description></Description>\n                <Description>\n                  \"I think, therefore I am\" René Descartes <br />\n                  Second Year Computer Engineering Undergraduate at University\n                  of Toronto\n                </Description>\n                <Description>What is my aim?</Description>\n                <Cul>\n                  <li>\n                    Leverage the power of technology to create paradigm shifts\n                    in the way the society thinks\n                  </li>\n                  <li>\n                    Creating solutions that make a meaningful impact on society\n                  </li>\n                </Cul>\n              </Descriptions>\n            </Content>\n          </ThemeProvider>\n        </Container>\n      </AboutComp>\n    </Element>\n  );\n};\n\nexport default AboutMe;\n\nconst Cul = styled.ul`\n  list-style-type: none;\n  font-size: 20px;\n  line-height: 1.5em;\n  font-weight: 400;\n  margin: 0;\n  margin-bottom: 18px;\n  @media only screen and (max-width: 992px) {\n    font-size: 18px;\n  }\n  @media only screen and (max-width: 600px) {\n    font-size: 16px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 14px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 12px;\n  }\n`;\n\nconst AboutComp = styled.div`\n  position: relative;\n  width: 100%;\n  /* height: 550px; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Quicksand\", \"san-serif\";\n  padding: 150px 0;\n  /* background-color: white; */\n`;\n\nconst Container = styled.div`\n  margin: 0px 10%;\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 700px;\n  text-align: left;\n  color: #222;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst TitleArea = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  font-weight: 500;\n  padding-right: 20px;\n  @media only screen and (max-width: 992px) {\n    font-size: 26px;\n  }\n  @media only screen and (max-width: 450px) {\n    padding-right: 15px;\n    font-size: 22px;\n    line-height: unset;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 20px;\n  }\n`;\n\nconst TitleHighlight = styled.span`\n  color: ${(props) => props.theme.color};\n`;\n\nconst TitleLineWrapper = styled.div`\n  overflow-x: hidden;\n  flex: 1;\n  height: 20px;\n  padding: 0;\n`;\n\nconst TitleLine = styled.div`\n  flex: 1;\n  height: 1px;\n  padding: 0;\n  background-color: ${(props) => props.theme.color};\n`;\n\nconst Descriptions = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst Description = styled.p`\n  font-size: 20px;\n  line-height: 1.5em;\n  font-weight: 400;\n  margin: 0;\n  margin-bottom: 18px;\n  @media only screen and (max-width: 992px) {\n    font-size: 18px;\n  }\n  @media only screen and (max-width: 600px) {\n    font-size: 16px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 14px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 12px;\n  }\n`;\n\nconst DescriptionBold = styled.span`\n  font-weight: 600;\n`;\n\nconst theme = {\n  color: \"#ff350d\",\n};\n","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Background/Fibre.js",["72","73","74","75"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport \"./Fibre.css\";\nimport \"./ColorMaterial\";\nimport clamp from \"clamp\";\n\nimport styled from \"styled-components\";\n\nimport {\n  ChromaticAberration,\n  EffectComposer,\n  Bloom,\n  Noise,\n  Vignette,\n  DotScreen,\n  HueSaturation,\n} from \"react-postprocessing\";\n\nimport { BlendFunction } from \"postprocessing\";\n\nvar colors = require(\"nice-color-palettes\");\n\nconsole.log(colors.length);\nlet pallete = colors[96];\n\nconst Fibre = () => {\n  const easeInOutQuint = function (pos) {\n    if ((pos /= 0.5) < 1) return 0.5 * Math.pow(pos, 5);\n    return 0.5 * (Math.pow(pos - 2, 5) + 2);\n  };\n\n  const tempObject = new THREE.Object3D();\n  function Box({ count }) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef();\n\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame((state) => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n      //console.log(state);\n\n      let i = 0;\n      let time = state.clock.getElapsedTime() % 6;\n      let playhead = time / 6;\n      let number = count;\n      for (let x = 0; x <= number; x++) {\n        for (let z = 0; z <= number; z++) {\n          let offset =\n            Math.sqrt((x / number - 0.5) ** 2 + (z / number - 0.5) ** 2) /\n            Math.sqrt(0.5 ** 2 + 0.5 ** 2);\n          const id = i++;\n          let progress = easeInOutQuint(\n            clamp((playhead - 0.4 * offset) / 0.6, 0, 1)\n          );\n          tempObject.position.set(\n            30 * (x / number - 0.5) + progress * 1.5,\n            offset * 0,\n            30 * (z / number - 0.5)\n          );\n          //tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(x / 4 + time);\n          tempObject.rotation.y = progress * Math.PI * 2;\n          let sine = Math.sin(progress * Math.PI);\n          const scale = 1;\n          tempObject.scale.set(\n            scale + 0.5 * sine,\n            scale + 0.5 * sine,\n            scale + 0.5 * sine\n          );\n          tempObject.updateMatrix();\n          mesh.current.setMatrixAt(id, tempObject.matrix);\n        }\n      }\n      mesh.current.instanceMatrix.needsUpdate = true;\n    });\n    return (\n      <instancedMesh ref={mesh} args={[null, null, 1000]}>\n        <boxBufferGeometry args={[0.3, 3.3, 0.3]} />\n        {/* <meshStandardMaterial color={\"hotpink\"} /> */}\n        <colorMaterial\n          color={pallete[1]}\n          color1={pallete[2]}\n          color2={pallete[3]}\n          attach=\"material\"\n        />\n      </instancedMesh>\n    );\n  }\n\n  function CameraMovement() {\n    useFrame(({ clock, camera }) => {\n      var rotSpeed = 0.0003;\n      var x = camera.position.x;\n      var y = camera.position.y;\n      var z = camera.position.z;\n      camera.position.y = y * Math.cos(rotSpeed) + z * Math.sin(rotSpeed);\n      camera.position.z = z * Math.cos(rotSpeed) - y * Math.sin(rotSpeed);\n    });\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <StyledName>\n        \"Only those who attempt the absurd, can achieve the impossible\"\n      </StyledName>\n      <Canvas\n        onCreated={({ gl }) => {\n          gl.setClearColor(pallete[4]);\n        }}\n        camera={{ position: [0, 10, 0] }}\n      >\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <Box position={[0, 0, 0]} count={20} />\n        <EffectComposer>\n          <ChromaticAberration offset={[-0.001, 0.005]} />\n          <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\n          <Noise opacity={0.02} />\n          <Vignette eskil={false} offset={0.1} darkness={1.1} />\n          {/* <DotScreen\n          blendFunction={BlendFunction.NORMAL} // blend mode\n          angle={Math.PI * 0.5} // angle of the dot pattern\n          scale={0.9} // scale of the dot pattern\n        /> */}\n          <HueSaturation\n            blendFunction={BlendFunction.NORMAL} // blend mode\n            hue={0} // hue in radians\n            saturation={0.2} // saturation in radians\n          />\n        </EffectComposer>\n        <CameraMovement />\n        <OrbitControls />\n      </Canvas>\n    </React.Fragment>\n  );\n};\n\nexport default Fibre;\n\nconst StyledName = styled.div`\n  font-size: 4em;\n  text-align: center;\n  margin-top: 20%;\n  margin-left: 10%;\n  margin-right: 10%;\n  color: #fcedd8;\n  font-family: \"Niconne\", cursive;\n  font-weight: 700;\n  text-shadow: 5px 5px 0px #eb452b;\n  position: absolute;\n  z-index: 2;\n`;\n","/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/NavBar/NavBar.js",[],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Background/ColorMaterial.js",[],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Projects/Projects.js",[],"/home/rishabh/UofT/aboutMe/portfolio/learn-react3fibre/src/Components/Projects/FeaturedProject.js",["76","77","78","79","80","81","82"],"import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport {FaGithub, FaExternalLinkAlt} from \"react-icons/fa\"\n\nconst FeaturedProject = (props) => {\n  const [imageIndex, setImageIndex] = React.useState(0);\n  return (\n    <FeaturedProjectComp>\n      <ThemeProvider theme={theme}>\n        <TextSide>\n          <Title>{props.title}</Title>\n          <Desc>{props.desc}</Desc>\n          <Techs>\n            {props.techs &&\n              props.techs.map((techItem, i) => {\n                return <TechItem key={i}>{techItem}</TechItem>;\n              })}\n          </Techs>\n          <Icons>\n            <a href={props.codeLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              <i className=\"fab fa-github\"><FaGithub/></i>\n            </a>\n            <a href={props.siteLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-external-link-alt\"><FaExternalLinkAlt /></i>\n            </a>\n          </Icons>\n        </TextSide>\n      </ThemeProvider>\n    </FeaturedProjectComp>\n  );\n};\n\nexport default FeaturedProject;\n\nconst FeaturedProjectComp = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  /* height: 500px; */\n  color: #222;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n  margin-bottom: 250px;\n  @media only screen and (max-width: 992px) {\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    /* min-height: 600px; */\n  }\n  @media only screen and (max-width: 600px) {\n    margin-bottom: 150px;\n    /* min-height: 500px; */\n  }\n  @media only screen and (max-width: 450px) {\n    height: 100%;\n    margin-bottom: 170px;\n    /* min-height: 350px; */\n  }\n  @media only screen and (max-width: 350px) {\n    height: 100%;\n    margin-bottom: 150px;\n    /* min-height: 350px; */\n  }\n`;\n\nconst ProjectSide = styled.div`\n  position: relative;\n  /* flex: 1; */\n  width: 100%;\n  height: 420px;\n  /* min-height: 250px; */\n  background-color: #eee;\n  margin-left: ${(props) => (props.reverse ? \"40px\" : \"0\")};\n  margin-right: ${(props) => (props.reverse ? \"0\" : \"40px\")};\n  overflow: hidden;\n  @media only screen and (max-width: 992px) {\n    width: 100%;\n    margin: 0;\n    margin-bottom: 20px;\n    height: 350px;\n  }\n  @media only screen and (max-width: 600px) {\n    height: 250px;\n  }\n  @media only screen and (max-width: 450px) {\n    height: 180px;\n  }\n  @media only screen and (max-width: 350px) {\n    height: 150px;\n  }\n`;\n\nconst ProjectImages = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n`;\n\nconst ProjectImage = styled.img.attrs((props) => ({\n  src: props.src,\n  width: \"100%\",\n  height: \"100%\",\n}))`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ImageButtons = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n  @media only screen and (max-width: 600px) {\n    bottom: 10px;\n  }\n  @media only screen and (max-width: 450px) {\n    bottom: 8px;\n  }\n`;\n\nconst ImageButton = styled.button`\n  width: 12px;\n  height: 12px;\n  outline: unset;\n  border: ${(props) => `1px solid ${props.theme.color}`};\n  background-color: ${(props) =>\n    props.selected ? props.theme.color : \"white\"};\n  border-radius: 50%;\n  padding: 3px;\n  margin: 0 10px;\n  box-sizing: border-box;\n  cursor: pointer;\n  @media only screen and (max-width: 450px) {\n    width: 19px;\n    height: 19px;\n    margin: 0 3px;\n  }\n`;\n\nconst AlphaBackground = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  /* z-index: 50; */\n  transition: 0.3s;\n  cursor: pointer;\n  ${ProjectSide}:hover & {\n    background-color: rgba(0, 0, 0, 0);\n  }\n`;\n\nconst TextSide = styled.div`\n  position: relative;\n  flex: 0;\n  min-width: 280px;\n  height: 100%;\n  color: #eee;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  @media only screen and (max-width: 1200px) {\n    min-width: 190px;\n  }\n  @media only screen and (max-width: 992px) {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n`;\n\nconst Title = styled.h3`\n  font-size: 22px;\n  font-weight: 600;\n  margin: 0;\n  margin-bottom: 15px;\n  @media only screen and (max-width: 1200px) {\n    font-size: 20px;\n  }\n  @media only screen and (max-width: 992px) {\n    font-size: 22px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 18px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 16px;\n  }\n`;\n\nconst Desc = styled.p`\n  font-size: 16px;\n  line-height: 1.8rem;\n  font-weight: 400;\n  margin: 0;\n  margin-bottom: 18px;\n  @media only screen and (max-width: 1200px) {\n    font-size: 16px;\n    margin-bottom: 10px;\n  }\n  @media only screen and (max-width: 992px) {\n    font-size: 18px;\n    line-height: 1.7rem;\n    margin-bottom: 15px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 14px;\n    line-height: unset;\n    margin-bottom: 8px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 12px;\n  }\n`;\n\nconst Techs = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  @media only screen and (max-width: 1200px) {\n    margin-bottom: 13px;\n  }\n  @media only screen and (max-width: 992px) {\n    width: 100%;\n    height: unset;\n    margin: 0;\n    margin-bottom: 15px;\n  }\n  @media only screen and (max-width: 450px) {\n    width: 100%;\n    height: unset;\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst TechItem = styled.li`\n  font-weight: 600;\n  font-size: 14px;\n  margin: 5px 15px;\n  color: ${(props) => props.theme.color};\n  @media only screen and (max-width: 1200px) {\n    font-size: 14px;\n    margin: 5px 10px;\n  }\n  @media only screen and (max-width: 992px) {\n    font-size: 16px;\n    margin: 5 15px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 12px;\n    line-height: unset;\n    margin: 3 5px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 10px;\n  }\n`;\n\nconst Icons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  a {\n    color: white;\n  }\n  i {\n    font-size: 20px;\n    padding: 5px;\n    margin: 20px;\n    transition: color 0.2s;\n    :hover {\n      color: ${(props) => props.theme.color};\n    }\n    @media only screen and (max-width: 1200px) {\n      font-size: 18px;\n      padding: 5px 15px;\n      margin: 0 10px;\n    }\n    @media only screen and (max-width: 992px) {\n      font-size: 18px;\n      padding: 5px 15px;\n      margin: 0 10px;\n    }\n    @media only screen and (max-width: 600px) {\n      font-size: 18px;\n    }\n    @media only screen and (max-width: 450px) {\n      font-size: 14px;\n    }\n    @media only screen and (max-width: 350px) {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst theme = {\n  color: \"#ff350d\",\n};\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":97,"column":1,"nodeType":"89","messageId":"90","endLine":134,"endColumn":2},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":17},{"ruleId":"93","severity":1,"message":"97","line":118,"column":7,"nodeType":"95","messageId":"96","endLine":118,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":125,"column":7,"nodeType":"95","messageId":"96","endLine":125,"endColumn":12},{"ruleId":"93","severity":1,"message":"99","line":142,"column":7,"nodeType":"95","messageId":"96","endLine":142,"endColumn":21},{"ruleId":"93","severity":1,"message":"100","line":146,"column":7,"nodeType":"95","messageId":"96","endLine":146,"endColumn":23},{"ruleId":"93","severity":1,"message":"101","line":153,"column":7,"nodeType":"95","messageId":"96","endLine":153,"endColumn":16},{"ruleId":"93","severity":1,"message":"102","line":188,"column":7,"nodeType":"95","messageId":"96","endLine":188,"endColumn":22},{"ruleId":"93","severity":1,"message":"103","line":1,"column":25,"nodeType":"95","messageId":"96","endLine":1,"endColumn":33},{"ruleId":"93","severity":1,"message":"104","line":1,"column":35,"nodeType":"95","messageId":"96","endLine":1,"endColumn":44},{"ruleId":"93","severity":1,"message":"105","line":17,"column":3,"nodeType":"95","messageId":"96","endLine":17,"endColumn":12},{"ruleId":"93","severity":1,"message":"106","line":94,"column":11,"nodeType":"95","messageId":"96","endLine":94,"endColumn":12},{"ruleId":"93","severity":1,"message":"107","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":20},{"ruleId":"93","severity":1,"message":"108","line":6,"column":22,"nodeType":"95","messageId":"96","endLine":6,"endColumn":35},{"ruleId":"93","severity":1,"message":"109","line":94,"column":7,"nodeType":"95","messageId":"96","endLine":94,"endColumn":20},{"ruleId":"93","severity":1,"message":"110","line":101,"column":7,"nodeType":"95","messageId":"96","endLine":101,"endColumn":19},{"ruleId":"93","severity":1,"message":"111","line":110,"column":7,"nodeType":"95","messageId":"96","endLine":110,"endColumn":19},{"ruleId":"93","severity":1,"message":"112","line":127,"column":7,"nodeType":"95","messageId":"96","endLine":127,"endColumn":18},{"ruleId":"93","severity":1,"message":"113","line":146,"column":7,"nodeType":"95","messageId":"96","endLine":146,"endColumn":22},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["114"],["115"],"no-unused-vars","'MdClose' is defined but never used.","Identifier","unusedVar","'TitleArea' is assigned a value but never used.","'Title' is assigned a value but never used.","'TitleHighlight' is assigned a value but never used.","'TitleLineWrapper' is assigned a value but never used.","'TitleLine' is assigned a value but never used.","'DescriptionBold' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'DotScreen' is defined but never used.","'x' is assigned a value but never used.","'imageIndex' is assigned a value but never used.","'setImageIndex' is assigned a value but never used.","'ProjectImages' is assigned a value but never used.","'ProjectImage' is assigned a value but never used.","'ImageButtons' is assigned a value but never used.","'ImageButton' is assigned a value but never used.","'AlphaBackground' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]