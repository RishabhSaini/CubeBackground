{"version":3,"sources":["Components/ColorMaterial.js","Components/Fibre.js","Components/ModalPopupProjects.js","Components/ModalPopupWork.js","Components/CardComp.js","App.js","reportWebVitals.js","index.js"],"names":["ColorMaterial","uniforms","time","value","color","THREE","color1","color2","vertexShader","fragmentShader","this","v","extend","colors","require","console","log","length","pallete","Fibre","tempObject","Box","count","mesh","useRef","useFrame","state","pos","i","playhead","clock","getElapsedTime","number","x","z","offset","Math","sqrt","id","progress","clamp","pow","position","set","rotation","y","PI","sine","sin","scale","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needsUpdate","ref","args","attach","CameraMovement","camera","rotSpeed","cos","onCreated","gl","setClearColor","luminanceThreshold","luminanceSmoothing","height","opacity","eskil","darkness","blendFunction","BlendFunction","NORMAL","hue","saturation","OrbitControls","ModalPopupProjects","showModalProjects","setShowModalProjects","Background","ModalWrapper","ModalContent","steps","loop","Infinity","wrapper","className","StyledButton","CloseModalButton","aria-label","onClick","prev","styled","div","MdClose","button","ModalPopupWork","showModalWork","setShowModalWork","CardComp","useState","Fragment","StyledName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.111b4cc5.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport { extend } from \"react-three-fiber\";\n\nclass ColorMaterial extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: { value: 1.0 },\n        color: { value: new THREE.Color(0.2, 0.0, 0.1) },\n        color1: { value: new THREE.Color(0.2, 0.0, 0.1) },\n        color2: { value: new THREE.Color(0.2, 0.0, 0.1) },\n      },\n      vertexShader: `varying vec2 vUv;\n      varying vec3 vNormal;\n        void main(){\n            vUv = uv;\n            vNormal = normal;\n            gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position, 1.0); \n        }`,\n      fragmentShader: `uniform float time;\n        uniform vec3 color;\n        uniform vec3 color1;\n        uniform vec3 color2;\n        varying vec3 vNormal;\n        varying vec2 vUv;\n        void main(){  \n            float c0 = abs(dot(vNormal, vec3(1.,0.,0.)));\n            float c1 = abs(dot(vNormal, vec3(0.,1.,0.)));\n            float c2 = abs(dot(vNormal, vec3(0.,0.,1.)));\n            vec3 finalColor = c0*color + c1*color1 + c2*color2;\n            gl_FragColor.rgba = vec4(finalColor, 1.0); \n        }`,\n    });\n  }\n  get color() {\n    return this.uniforms.color.value;\n  }\n  get color1() {\n    return this.uniforms.color1.value;\n  }\n  get color2() {\n    return this.uniforms.color2.value;\n  }\n  get time() {\n    return this.uniforms.time.value;\n  }\n  set time(v) {\n    return (this.uniforms.time.value = v);\n  }\n}\n\nextend({ ColorMaterial });\n","import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport \"./Fibre.css\";\nimport \"./ColorMaterial\";\nimport clamp from \"clamp\";\nimport {\n  ChromaticAberration,\n  EffectComposer,\n  Bloom,\n  Noise,\n  Vignette,\n  DotScreen,\n  HueSaturation,\n} from \"react-postprocessing\";\n\nimport { BlendFunction } from \"postprocessing\";\n\nvar colors = require(\"nice-color-palettes\");\n\nconsole.log(colors.length);\nlet pallete = colors[96];\n\nconst Fibre = () => {\n  const easeInOutQuint = function (pos) {\n    if ((pos /= 0.5) < 1) return 0.5 * Math.pow(pos, 5);\n    return 0.5 * (Math.pow(pos - 2, 5) + 2);\n  };\n\n  const tempObject = new THREE.Object3D();\n  function Box({ count }) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef();\n\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame((state) => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n      //console.log(state);\n\n      let i = 0;\n      let time = state.clock.getElapsedTime() % 6;\n      let playhead = time / 6;\n      let number = count;\n      for (let x = 0; x <= number; x++) {\n        for (let z = 0; z <= number; z++) {\n          let offset =\n            Math.sqrt((x / number - 0.5) ** 2 + (z / number - 0.5) ** 2) /\n            Math.sqrt(0.5 ** 2 + 0.5 ** 2);\n          const id = i++;\n          let progress = easeInOutQuint(\n            clamp((playhead - 0.4 * offset) / 0.6, 0, 1)\n          );\n          tempObject.position.set(\n            30 * (x / number - 0.5) + progress * 1.5,\n            offset * 0,\n            30 * (z / number - 0.5)\n          );\n          //tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(x / 4 + time);\n          tempObject.rotation.y = progress * Math.PI * 2;\n          let sine = Math.sin(progress * Math.PI);\n          const scale = 1;\n          tempObject.scale.set(\n            scale + 0.5 * sine,\n            scale + 0.5 * sine,\n            scale + 0.5 * sine\n          );\n          tempObject.updateMatrix();\n          mesh.current.setMatrixAt(id, tempObject.matrix);\n        }\n      }\n      mesh.current.instanceMatrix.needsUpdate = true;\n    });\n    return (\n      <instancedMesh ref={mesh} args={[null, null, 1000]}>\n        <boxBufferGeometry args={[0.3, 3.3, 0.3]} />\n        {/* <meshStandardMaterial color={\"hotpink\"} /> */}\n        <colorMaterial\n          color={pallete[1]}\n          color1={pallete[2]}\n          color2={pallete[3]}\n          attach=\"material\"\n        />\n      </instancedMesh>\n    );\n  }\n\n  function CameraMovement() {\n    useFrame(({ clock, camera }) => {\n      var rotSpeed = 0.0003;\n      var x = camera.position.x;\n      var y = camera.position.y;\n      var z = camera.position.z;\n      camera.position.y = y * Math.cos(rotSpeed) + z * Math.sin(rotSpeed);\n      camera.position.z = z * Math.cos(rotSpeed) - y * Math.sin(rotSpeed);\n    });\n    return null;\n  }\n\n  return (\n    <Canvas\n      onCreated={({ gl }) => {\n        gl.setClearColor(pallete[4]);\n      }}\n      camera={{ position: [0, 10, 0] }}\n    >\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <Box position={[0, 0, 0]} count={20} />\n      <EffectComposer>\n        <ChromaticAberration offset={[-0.001, 0.005]} />\n        <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\n        <Noise opacity={0.02} />\n        <Vignette eskil={false} offset={0.1} darkness={1.1} />\n        {/* <DotScreen\n          blendFunction={BlendFunction.NORMAL} // blend mode\n          angle={Math.PI * 0.5} // angle of the dot pattern\n          scale={0.9} // scale of the dot pattern\n        /> */}\n        <HueSaturation\n          blendFunction={BlendFunction.NORMAL} // blend mode\n          hue={0} // hue in radians\n          saturation={0.2} // saturation in radians\n        />\n      </EffectComposer>\n      <CameraMovement />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n\nexport default Fibre;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdClose } from \"react-icons/md\";\nimport Typical from \"react-typical\";\nimport \"./ModalPopup.css\";\n\nconst ModalPopupProjects = ({ showModalProjects, setShowModalProjects }) => {\n  return (\n    <>\n      {showModalProjects ? (\n        <Background>\n          <ModalWrapper>\n            <ModalContent>\n              <Typical\n                steps={[\n                  \"Welcome\",\n                  1000,\n                  \"I am Rishabh\",\n                  3000,\n                  \"I am a Designer\",\n                  2000,\n                  \"I am a Creator\",\n                  2000,\n                  \"I am a Thinker\",\n                  2000,\n                  \"I am a Developer\",\n                  2000,\n                  \"I am a Innovator\",\n                  2000,\n                  \"I am a Inventor\",\n                  2000,\n                ]}\n                loop={Infinity}\n                wrapper=\"h1\"\n                className=\"\"\n              />\n\n              <div className=\"grid-container\">\n                <div className=\"grid-item w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>Blockchain Fundraising Platform</h4>\n                      <p>\n                        Designed a Decentralized Ethereum application and\n                        applied concepts of test driven development to create a\n                        secure auctioning platform\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>LEEV: Electric Vehicle Power Stations Renting</h4>\n                      <p>\n                        A 4 month project to design the application architecture\n                        for renting electric vehicles charging station in\n                        Downtown, Toronto. Our business client was a UofT alumni\n                        in North York.\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item  w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>Personal Website</h4>\n                      <p>\n                        Designed the website you are currently viewing using\n                        React and used WebGL rendering for the beautiful\n                        animation at the background\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item  w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>Reversi/Othello</h4>\n                      <p>\n                        Utilized minimax algorithm with alpha beta pruning and\n                        weighted matrix to create a Reversi bot with response\n                        time under 1 second\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>Maskaught</h4>\n                      <p>\n                        A mask detection designed to be placed outside shops. It\n                        utilizes deep learning using tensorflow to train and\n                        predict data and Django to create the backend for the\n                        web application.\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item  w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>Eye Can See</h4>\n                      <p>\n                        A 20/20 vision testing system that utilizes an speech\n                        recognition system and an arduino board integration. See\n                        project EYE CAN SEE\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item  w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>ResumaBuilder</h4>\n                      <p>\n                        Resumabuilder allows you to compare your current resume\n                        to your ideal resume, it also gives you a progress\n                        tracker to achieve the perfect resume that you want.\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n              </div>\n            </ModalContent>\n            <CloseModalButton\n              aria-label=\"Close modal\"\n              onClick={() => setShowModalProjects((prev) => !prev)}\n            />\n          </ModalWrapper>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n\nexport default ModalPopupProjects;\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 80%;\n  height: 80%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #D7C58D;\n  color: #000;\n  position: absolute;\n  z-index: 4;\n  border-radius: 10px;\n  margin: 5% 10%;\n  overflow: auto;\n  ::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  h4{\n    font-size: 25px;\n    color: #ff2281;\n  }\n  p {\n    margin-bottom: 1rem;\n    font-size: 19px;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  height: 100%;\n  border: none;\n  background: #141414;\n  color: #fff;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdClose } from \"react-icons/md\";\nimport Typical from \"react-typical\";\nimport \"./ModalPopup.css\";\n\nconst ModalPopupWork = ({ showModalWork, setShowModalWork }) => {\n  return (\n    <>\n      {showModalWork ? (\n        <Background>\n          <ModalWrapper>\n            <ModalContent>\n              <Typical\n                steps={[\n                  \"Welcome\",\n                  1000,\n                  \"I am Rishabh\",\n                  3000,\n                  \"I am a Designer\",\n                  2000,\n                  \"I am a Creator\",\n                  2000,\n                  \"I am a Thinker\",\n                  2000,\n                  \"I am a Developer\",\n                  2000,\n                  \"I am a Innovator\",\n                  2000,\n                  \"I am a Inventor\",\n                  2000,\n                ]}\n                loop={Infinity}\n                wrapper=\"h1\"\n                className=\"\"\n              />\n\n              <div className=\"grid-container\">\n                <div className=\"grid-item w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>Braintoy</h4>\n                      <p>\n                        I worked along with Chief Technical Officer and a group\n                        of developers to build a customer relationship\n                        management web application for a S&P 500 company with\n                        artificially intelligent recommendation system.\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>NeurotechUofT</h4>\n                      <p>\n                        Currently serving as the Front End Co-Lead at\n                        NeurotechUofT (University of Toronto's team at\n                        NeurotechX Competiton), that are the runner-ups of the\n                        2019 competition. As the frontend lead I oversee the\n                        development of the web application for the MindType\n                        Project (Mind-Controlled Keyboard).\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item  w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>ECE Club</h4>\n                      <p>\n                        I manage mentors, who will be providing guidance and\n                        support to first year students. This is a crucial role\n                        as incoming students will be experiencing their\n                        university classes in a completely online setting and\n                        will need help from upper year students on how to manage\n                        their first year courses.\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n                <div className=\"grid-item  w3-margin\">\n                  <StyledButton>\n                    <div className=\"w3-container w3-center\">\n                      <h4>The Guardian</h4>\n                      <p>\n                        Created online content by writing book reviews. Got an\n                        insight into the skill of writing for publishing.\n                        Enhanced creativity and expanded my domain of knowledge.\n                      </p>\n                    </div>\n                  </StyledButton>\n                </div>\n              </div>\n            </ModalContent>\n            <CloseModalButton\n              aria-label=\"Close modal\"\n              onClick={() => setShowModalWork((prev) => !prev)}\n            />\n          </ModalWrapper>\n        </Background>\n      ) : null}\n    </>\n  );\n};\n\nexport default ModalPopupWork;\n\nconst Background = styled.div`\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  z-index: 5;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 80%;\n  height: 80%;\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #cdd5c0;\n  color: #000;\n  position: absolute;\n  z-index: 4;\n  border-radius: 10px;\n  margin: 5% 10%;\n  overflow: auto;\n  ::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  ::-webkit-scrollbar-track {\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n    border-radius: 10px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  h4 {\n    font-size: 25px;\n    color: #ff2281;\n  }\n  p {\n    margin-bottom: 1rem;\n    font-size: 19px;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\nconst StyledButton = styled.button`\n  border-radius: 4px;\n  height: 100%;\n  border: none;\n  background: #141414;\n  color: #fff;\n  cursor: pointer;\n`;\n","import React, { useState } from \"react\";\nimport \"./CardComp.css\";\nimport \"w3-css/w3.css\";\nimport ModalPopupProjects from \"./ModalPopupProjects\";\nimport ModalPopupWork from \"./ModalPopupWork\";\nimport styled from \"styled-components\";\n\nconst CardComp = () => {\n  const [showModalProjects, setShowModalProjects] = useState(false);\n  const [showModalWork, setShowModalWork] = useState(false);\n  const openModalProjects = () => {\n    setShowModalProjects((prev) => !prev);\n  };\n  const openModalWork = () => {\n    setShowModalWork((prev) => !prev);\n  };\n  return (\n    <React.Fragment>\n      <div className=\"header w3-row\">\n        <div className=\"w3-container w3-quarter\">\n          <StyledButton onClick={openModalProjects}>Projects</StyledButton>\n        </div>\n        <div className=\"w3-container w3-half\">\n          <StyledName>Rishabh Saini</StyledName>\n        </div>\n        <div className=\"w3-container w3-quarter\">\n          <StyledButton onClick={openModalWork}>Work Experience</StyledButton>\n        </div>\n      </div>\n      <ModalPopupProjects\n        showModalProjects={showModalProjects}\n        setShowModalProjects={setShowModalProjects}\n      ></ModalPopupProjects>\n      <ModalPopupWork\n        showModalWork={showModalWork}\n        setShowModalWork={setShowModalWork}\n      ></ModalPopupWork>\n      <div className=\"cardComp\">\n        <div className=\"w3-container w3-margin\">\n          <div className=\"box w3-panel w3-card \">\n            <div className=\"cust-div\">What inspires me?</div>\n            <ul className=\"cust-ul\">\n              <li>\n                \"Only those who attempt the absurd can achieve the impossible\"\n                Albert Einstein\n              </li>\n            </ul>\n            <div className=\"cust-div\">What is my aim?</div>\n            <ul className=\"cust-ul\">\n              <li>\n                Leverage the power of technology to create paradigm shifts in\n                the way the society thinks\n              </li>\n              <li>\n                Creating solutions that make a meaningful impact on society\n              </li>\n            </ul>\n            <div className=\"cust-div\">Who am I?</div>\n            <ul className=\"cust-ul\">\n              <li>\"I think, therefore I am\" René Descartes</li>\n              <li>Education: Youtube, Google, Coursera</li>\n              <li>\n                2nd Year Computer Engineering Undergraduate at University of\n                Toronto\n              </li>\n            </ul>\n            <div className=\"cust-div\">Why a website?</div>\n            <ul className=\"cust-ul\">\n              <li>To showcase my portfolio and ongoing projects</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CardComp;\n\nconst StyledButton = styled.button`\n  min-width: 100px;\n  padding: 5px 15px;\n  margin: 10px;\n  border-radius: 4px;\n  border: none;\n  background: #709fb0;\n  color: #f4ebc1;\n  font-size: 24px;\n  cursor: pointer;\n  opacity: 80%;\n  :hover {\n    opacity: 100%;\n    background-color: #709fb0;\n    color: #f4ebc1;\n  }\n`;\n\nconst StyledName = styled.div`\n  font-size: 5rem;\n  text-align: center;\n  height: 10vh;\n  line-height: 10vh;\n  color: #fcedd8;\n  font-family: \"Niconne\", cursive;\n  font-weight: 700;\n  text-shadow: 5px 5px 0px #eb452b, 10px 10px 0px #efa032, 15px 15px 0px #46b59b,\n    20px 20px 0px #017e7f;\n`;\n","import React from \"react\";\nimport Fibre from \"./Components/Fibre\";\nimport CardComp from \"./Components/CardComp\"\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CardComp/>\n      <Fibre/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}