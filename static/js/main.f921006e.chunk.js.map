{"version":3,"sources":["Components/Background/ColorMaterial.js","Components/Background/Fibre.js","Components/AboutMe/AboutMe.js","Components/NavBar/NavBar.js","Components/Projects/FeaturedProject.js","Components/Projects/Projects.js","App.js","reportWebVitals.js","index.js"],"names":["ColorMaterial","uniforms","time","value","color","THREE","color1","color2","vertexShader","fragmentShader","this","v","extend","colors","require","console","log","length","pallete","Fibre","tempObject","Box","count","mesh","useRef","useFrame","state","pos","i","playhead","clock","getElapsedTime","number","x","z","offset","Math","sqrt","id","progress","clamp","pow","position","set","rotation","y","PI","sine","sin","scale","updateMatrix","current","setMatrixAt","matrix","instanceMatrix","needsUpdate","ref","args","attach","CameraMovement","camera","rotSpeed","cos","Fragment","StyledName","onCreated","gl","setClearColor","luminanceThreshold","luminanceSmoothing","height","opacity","eskil","darkness","blendFunction","BlendFunction","NORMAL","hue","saturation","OrbitControls","styled","div","AboutMe","name","AboutComp","Container","theme","Content","steps","loop","Infinity","wrapper","className","Descriptions","Description","Cul","ul","h2","span","props","p","NavBar","Navbar","bg","variant","fixed","Brand","Nav","Link","to","spy","smooth","duration","FeaturedProject","React","useState","FeaturedProjectComp","TextSide","title","Desc","desc","Techs","techs","map","techItem","TechItem","Icons","href","codeLink","target","rel","siteLink","ProjectSide","reverse","img","attrs","src","width","button","selected","Title","h3","li","Projects","FeaturedProjectsComp","ProjectArea","images","TitleArea","TitleHighlight","TitleLineWrapper","TitleLine","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f921006e.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport { extend } from \"react-three-fiber\";\n\nclass ColorMaterial extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: { value: 1.0 },\n        color: { value: new THREE.Color(0.2, 0.0, 0.1) },\n        color1: { value: new THREE.Color(0.2, 0.0, 0.1) },\n        color2: { value: new THREE.Color(0.2, 0.0, 0.1) },\n      },\n      vertexShader: `varying vec2 vUv;\n      varying vec3 vNormal;\n        void main(){\n            vUv = uv;\n            vNormal = normal;\n            gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position, 1.0); \n        }`,\n      fragmentShader: `uniform float time;\n        uniform vec3 color;\n        uniform vec3 color1;\n        uniform vec3 color2;\n        varying vec3 vNormal;\n        varying vec2 vUv;\n        void main(){  \n            float c0 = abs(dot(vNormal, vec3(1.,0.,0.)));\n            float c1 = abs(dot(vNormal, vec3(0.,1.,0.)));\n            float c2 = abs(dot(vNormal, vec3(0.,0.,1.)));\n            vec3 finalColor = c0*color + c1*color1 + c2*color2;\n            gl_FragColor.rgba = vec4(finalColor, 1.0); \n        }`,\n    });\n  }\n  get color() {\n    return this.uniforms.color.value;\n  }\n  get color1() {\n    return this.uniforms.color1.value;\n  }\n  get color2() {\n    return this.uniforms.color2.value;\n  }\n  get time() {\n    return this.uniforms.time.value;\n  }\n  set time(v) {\n    return (this.uniforms.time.value = v);\n  }\n}\n\nextend({ ColorMaterial });\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport \"./Fibre.css\";\nimport \"./ColorMaterial\";\nimport clamp from \"clamp\";\n\nimport styled from \"styled-components\";\n\nimport {\n  ChromaticAberration,\n  EffectComposer,\n  Bloom,\n  Noise,\n  Vignette,\n  DotScreen,\n  HueSaturation,\n} from \"react-postprocessing\";\n\nimport { BlendFunction } from \"postprocessing\";\n\nvar colors = require(\"nice-color-palettes\");\n\nconsole.log(colors.length);\nlet pallete = colors[96];\n\nconst Fibre = () => {\n  const easeInOutQuint = function (pos) {\n    if ((pos /= 0.5) < 1) return 0.5 * Math.pow(pos, 5);\n    return 0.5 * (Math.pow(pos - 2, 5) + 2);\n  };\n\n  const tempObject = new THREE.Object3D();\n  function Box({ count }) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef();\n\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame((state) => {\n      //mesh.current.rotation.x = mesh.current.rotation.y += 0.01;\n      //console.log(state);\n\n      let i = 0;\n      let time = state.clock.getElapsedTime() % 6;\n      let playhead = time / 6;\n      let number = count;\n      for (let x = 0; x <= number; x++) {\n        for (let z = 0; z <= number; z++) {\n          let offset =\n            Math.sqrt((x / number - 0.5) ** 2 + (z / number - 0.5) ** 2) /\n            Math.sqrt(0.5 ** 2 + 0.5 ** 2);\n          const id = i++;\n          let progress = easeInOutQuint(\n            clamp((playhead - 0.4 * offset) / 0.6, 0, 1)\n          );\n          tempObject.position.set(\n            30 * (x / number - 0.5) + progress * 1.5,\n            offset * 0,\n            30 * (z / number - 0.5)\n          );\n          //tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(x / 4 + time);\n          tempObject.rotation.y = progress * Math.PI * 2;\n          let sine = Math.sin(progress * Math.PI);\n          const scale = 1;\n          tempObject.scale.set(\n            scale + 0.5 * sine,\n            scale + 0.5 * sine,\n            scale + 0.5 * sine\n          );\n          tempObject.updateMatrix();\n          mesh.current.setMatrixAt(id, tempObject.matrix);\n        }\n      }\n      mesh.current.instanceMatrix.needsUpdate = true;\n    });\n    return (\n      <instancedMesh ref={mesh} args={[null, null, 1000]}>\n        <boxBufferGeometry args={[0.3, 3.3, 0.3]} />\n        {/* <meshStandardMaterial color={\"hotpink\"} /> */}\n        <colorMaterial\n          color={pallete[1]}\n          color1={pallete[2]}\n          color2={pallete[3]}\n          attach=\"material\"\n        />\n      </instancedMesh>\n    );\n  }\n\n  function CameraMovement() {\n    useFrame(({ clock, camera }) => {\n      var rotSpeed = 0.0003;\n      var x = camera.position.x;\n      var y = camera.position.y;\n      var z = camera.position.z;\n      camera.position.y = y * Math.cos(rotSpeed) + z * Math.sin(rotSpeed);\n      camera.position.z = z * Math.cos(rotSpeed) - y * Math.sin(rotSpeed);\n    });\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <StyledName>\n        \"Only those who attempt the absurd, can achieve the impossible\"\n      </StyledName>\n      <Canvas\n        onCreated={({ gl }) => {\n          gl.setClearColor(pallete[4]);\n        }}\n        camera={{ position: [0, 10, 0] }}\n      >\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <Box position={[0, 0, 0]} count={20} />\n        <EffectComposer>\n          <ChromaticAberration offset={[-0.001, 0.005]} />\n          <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} />\n          <Noise opacity={0.02} />\n          <Vignette eskil={false} offset={0.1} darkness={1.1} />\n          {/* <DotScreen\n          blendFunction={BlendFunction.NORMAL} // blend mode\n          angle={Math.PI * 0.5} // angle of the dot pattern\n          scale={0.9} // scale of the dot pattern\n        /> */}\n          <HueSaturation\n            blendFunction={BlendFunction.NORMAL} // blend mode\n            hue={0} // hue in radians\n            saturation={0.2} // saturation in radians\n          />\n        </EffectComposer>\n        <CameraMovement />\n        <OrbitControls />\n      </Canvas>\n    </React.Fragment>\n  );\n};\n\nexport default Fibre;\n\nconst StyledName = styled.div`\n  font-size: 4em;\n  text-align: center;\n  margin-top: 20%;\n  margin-left: 10%;\n  margin-right: 10%;\n  color: #fcedd8;\n  font-family: \"Niconne\", cursive;\n  font-weight: 700;\n  text-shadow: 5px 5px 0px #eb452b;\n  position: absolute;\n  z-index: 2;\n`;\n","import React from \"react\";\nimport { Element } from \"react-scroll\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport Typical from \"react-typical\";\n\nconst AboutMe = () => {\n  return (\n    <Element id=\"DestaboutMe\" name=\"DestaboutMe\">\n      <AboutComp id=\"about\">\n        <Container>\n          <ThemeProvider theme={theme}>\n            <Content>\n              <Typical\n                steps={[\n                  \"Welcome\",\n                  1000,\n                  \"I am Rishabh\",\n                  3000,\n                  \"I am a Designer\",\n                  2000,\n                  \"I am a Creator\",\n                  2000,\n                  \"I am a Thinker\",\n                  2000,\n                  \"I am a Developer\",\n                  2000,\n                  \"I am a Innovator\",\n                  2000,\n                  \"I am a Inventor\",\n                  2000,\n                ]}\n                loop={Infinity}\n                wrapper=\"h1\"\n                className=\"\"\n              />\n              <Descriptions>\n                <Description></Description>\n                <Description>\n                  \"I think, therefore I am\" René Descartes <br />\n                  Second Year Computer Engineering Undergraduate at University\n                  of Toronto\n                </Description>\n                <Description>What is my aim?</Description>\n                <Cul>\n                  <li>\n                    Leverage the power of technology to create paradigm shifts\n                    in the way the society thinks\n                  </li>\n                  <li>\n                    Creating solutions that make a meaningful impact on society\n                  </li>\n                </Cul>\n              </Descriptions>\n            </Content>\n          </ThemeProvider>\n        </Container>\n      </AboutComp>\n    </Element>\n  );\n};\n\nexport default AboutMe;\n\nconst Cul = styled.ul`\n  list-style-type: none;\n  font-size: 20px;\n  line-height: 1.5em;\n  font-weight: 400;\n  margin: 0;\n  margin-bottom: 18px;\n  @media only screen and (max-width: 992px) {\n    font-size: 18px;\n  }\n  @media only screen and (max-width: 600px) {\n    font-size: 16px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 14px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 12px;\n  }\n`;\n\nconst AboutComp = styled.div`\n  position: relative;\n  width: 100%;\n  /* height: 550px; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: \"Quicksand\", \"san-serif\";\n  padding: 150px 0;\n  /* background-color: white; */\n`;\n\nconst Container = styled.div`\n  margin: 0px 10%;\n  position: relative;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 700px;\n  text-align: left;\n  color: #222;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst TitleArea = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  font-size: 28px;\n  font-weight: 500;\n  padding-right: 20px;\n  @media only screen and (max-width: 992px) {\n    font-size: 26px;\n  }\n  @media only screen and (max-width: 450px) {\n    padding-right: 15px;\n    font-size: 22px;\n    line-height: unset;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 20px;\n  }\n`;\n\nconst TitleHighlight = styled.span`\n  color: ${(props) => props.theme.color};\n`;\n\nconst TitleLineWrapper = styled.div`\n  overflow-x: hidden;\n  flex: 1;\n  height: 20px;\n  padding: 0;\n`;\n\nconst TitleLine = styled.div`\n  flex: 1;\n  height: 1px;\n  padding: 0;\n  background-color: ${(props) => props.theme.color};\n`;\n\nconst Descriptions = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nconst Description = styled.p`\n  font-size: 20px;\n  line-height: 1.5em;\n  font-weight: 400;\n  margin: 0;\n  margin-bottom: 18px;\n  @media only screen and (max-width: 992px) {\n    font-size: 18px;\n  }\n  @media only screen and (max-width: 600px) {\n    font-size: 16px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 14px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 12px;\n  }\n`;\n\nconst DescriptionBold = styled.span`\n  font-weight: 600;\n`;\n\nconst theme = {\n  color: \"#ff350d\",\n};\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-scroll\";\n\nconst NavBar = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n      <Navbar.Brand>Rishabh Saini</Navbar.Brand>\n      <Nav.Link>\n        <Link to=\"DestaboutMe\" spy={true} smooth={true} duration={500}>\n          About Me\n        </Link>\n      </Nav.Link>\n      <Nav.Link>\n        <Link to=\"DestProjects\" spy={true} smooth={true} duration={500}>\n          Projects\n        </Link>\n      </Nav.Link>\n      <Nav.Link>\n        <Link to=\"DestExperience\" spy={true} smooth={true} duration={500}>\n          Exprience\n        </Link>\n      </Nav.Link>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport {FaGithub, FaExternalLinkAlt} from \"react-icons/fa\"\n\nconst FeaturedProject = (props) => {\n  const [imageIndex, setImageIndex] = React.useState(0);\n  return (\n    <FeaturedProjectComp>\n      <ThemeProvider theme={theme}>\n        <TextSide>\n          <Title>{props.title}</Title>\n          <Desc>{props.desc}</Desc>\n          <Techs>\n            {props.techs &&\n              props.techs.map((techItem, i) => {\n                return <TechItem key={i}>{techItem}</TechItem>;\n              })}\n          </Techs>\n          <Icons>\n            <a href={props.codeLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              <i className=\"fab fa-github\"><FaGithub/></i>\n            </a>\n            <a href={props.siteLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-external-link-alt\"><FaExternalLinkAlt /></i>\n            </a>\n          </Icons>\n        </TextSide>\n      </ThemeProvider>\n    </FeaturedProjectComp>\n  );\n};\n\nexport default FeaturedProject;\n\nconst FeaturedProjectComp = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  /* height: 500px; */\n  color: #222;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0;\n  margin-bottom: 250px;\n  @media only screen and (max-width: 992px) {\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    /* min-height: 600px; */\n  }\n  @media only screen and (max-width: 600px) {\n    margin-bottom: 150px;\n    /* min-height: 500px; */\n  }\n  @media only screen and (max-width: 450px) {\n    height: 100%;\n    margin-bottom: 170px;\n    /* min-height: 350px; */\n  }\n  @media only screen and (max-width: 350px) {\n    height: 100%;\n    margin-bottom: 150px;\n    /* min-height: 350px; */\n  }\n`;\n\nconst ProjectSide = styled.div`\n  position: relative;\n  /* flex: 1; */\n  width: 100%;\n  height: 420px;\n  /* min-height: 250px; */\n  background-color: #eee;\n  margin-left: ${(props) => (props.reverse ? \"40px\" : \"0\")};\n  margin-right: ${(props) => (props.reverse ? \"0\" : \"40px\")};\n  overflow: hidden;\n  @media only screen and (max-width: 992px) {\n    width: 100%;\n    margin: 0;\n    margin-bottom: 20px;\n    height: 350px;\n  }\n  @media only screen and (max-width: 600px) {\n    height: 250px;\n  }\n  @media only screen and (max-width: 450px) {\n    height: 180px;\n  }\n  @media only screen and (max-width: 350px) {\n    height: 150px;\n  }\n`;\n\nconst ProjectImages = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n`;\n\nconst ProjectImage = styled.img.attrs((props) => ({\n  src: props.src,\n  width: \"100%\",\n  height: \"100%\",\n}))`\n  width: 100%;\n  height: 100%;\n`;\n\nconst ImageButtons = styled.div`\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n  @media only screen and (max-width: 600px) {\n    bottom: 10px;\n  }\n  @media only screen and (max-width: 450px) {\n    bottom: 8px;\n  }\n`;\n\nconst ImageButton = styled.button`\n  width: 12px;\n  height: 12px;\n  outline: unset;\n  border: ${(props) => `1px solid ${props.theme.color}`};\n  background-color: ${(props) =>\n    props.selected ? props.theme.color : \"white\"};\n  border-radius: 50%;\n  padding: 3px;\n  margin: 0 10px;\n  box-sizing: border-box;\n  cursor: pointer;\n  @media only screen and (max-width: 450px) {\n    width: 19px;\n    height: 19px;\n    margin: 0 3px;\n  }\n`;\n\nconst AlphaBackground = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  /* z-index: 50; */\n  transition: 0.3s;\n  cursor: pointer;\n  ${ProjectSide}:hover & {\n    background-color: rgba(0, 0, 0, 0);\n  }\n`;\n\nconst TextSide = styled.div`\n  position: relative;\n  flex: 0;\n  min-width: 280px;\n  height: 100%;\n  color: #eee;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  @media only screen and (max-width: 1200px) {\n    min-width: 190px;\n  }\n  @media only screen and (max-width: 992px) {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n  }\n`;\n\nconst Title = styled.h3`\n  font-size: 22px;\n  font-weight: 600;\n  margin: 0;\n  margin-bottom: 15px;\n  @media only screen and (max-width: 1200px) {\n    font-size: 20px;\n  }\n  @media only screen and (max-width: 992px) {\n    font-size: 22px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 18px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 16px;\n  }\n`;\n\nconst Desc = styled.p`\n  font-size: 16px;\n  line-height: 1.8rem;\n  font-weight: 400;\n  margin: 0;\n  margin-bottom: 18px;\n  @media only screen and (max-width: 1200px) {\n    font-size: 16px;\n    margin-bottom: 10px;\n  }\n  @media only screen and (max-width: 992px) {\n    font-size: 18px;\n    line-height: 1.7rem;\n    margin-bottom: 15px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 14px;\n    line-height: unset;\n    margin-bottom: 8px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 12px;\n  }\n`;\n\nconst Techs = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  @media only screen and (max-width: 1200px) {\n    margin-bottom: 13px;\n  }\n  @media only screen and (max-width: 992px) {\n    width: 100%;\n    height: unset;\n    margin: 0;\n    margin-bottom: 15px;\n  }\n  @media only screen and (max-width: 450px) {\n    width: 100%;\n    height: unset;\n    margin: 0;\n    margin-bottom: 10px;\n  }\n`;\n\nconst TechItem = styled.li`\n  font-weight: 600;\n  font-size: 14px;\n  margin: 5px 15px;\n  color: ${(props) => props.theme.color};\n  @media only screen and (max-width: 1200px) {\n    font-size: 14px;\n    margin: 5px 10px;\n  }\n  @media only screen and (max-width: 992px) {\n    font-size: 16px;\n    margin: 5 15px;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 12px;\n    line-height: unset;\n    margin: 3 5px;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 10px;\n  }\n`;\n\nconst Icons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  a {\n    color: white;\n  }\n  i {\n    font-size: 20px;\n    padding: 5px;\n    margin: 20px;\n    transition: color 0.2s;\n    :hover {\n      color: ${(props) => props.theme.color};\n    }\n    @media only screen and (max-width: 1200px) {\n      font-size: 18px;\n      padding: 5px 15px;\n      margin: 0 10px;\n    }\n    @media only screen and (max-width: 992px) {\n      font-size: 18px;\n      padding: 5px 15px;\n      margin: 0 10px;\n    }\n    @media only screen and (max-width: 600px) {\n      font-size: 18px;\n    }\n    @media only screen and (max-width: 450px) {\n      font-size: 14px;\n    }\n    @media only screen and (max-width: 350px) {\n      font-size: 12px;\n    }\n  }\n`;\n\nconst theme = {\n  color: \"#ff350d\",\n};\n","import React from \"react\";\nimport { Element } from \"react-scroll\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport FeaturedProject from \"./FeaturedProject.js\";\n\nconst Projects = () => {\n  return (\n    <Element id=\"DestaboutMe\" name=\"DestProjects\">\n      <FeaturedProjectsComp>\n        <ThemeProvider theme={theme}>\n          <TitleArea>\n            <Title>\n              <TitleHighlight>Projects</TitleHighlight>\n            </Title>\n            <TitleLineWrapper>\n              <TitleLine />\n            </TitleLineWrapper>\n          </TitleArea>\n          <ProjectArea>\n            <FeaturedProject\n              title={\"BlockChain Fundraising Platform\"}\n              desc={`Designed a Decentralized Ethereum application and\n              applied concepts of test driven development to create a\n              secure auctioning platform`}\n              techs={[\"Ethereum\", \"Smart Contracts\", \"Truffle\", \"Solidity\"]}\n              codeLink={\"\"}\n              siteLink={\"\"}\n              images={[]}\n            />\n            <FeaturedProject\n              reverse={true}\n              title={\"LEEV: Electric Vehicle Power Stations Renting\"}\n              desc={`A 4 month project to design the application architecture\n              for renting electric vehicles charging station in\n              Downtown, Toronto. Our business client was a UofT alumni\n              in North York.`}\n              techs={[\n                \"Mobile App Architecture\",\n                \"Team Charter\",\n                \"Team Status\",\n                \"Gantt Charts\",\n              ]}\n              codeLink={\"\"}\n              siteLink={\"\"}\n              images={[]}\n            />\n            <FeaturedProject\n              title={\"Personal Website\"}\n              desc={`Designed the website you are currently viewing using\n              React and used WebGL rendering for the beautiful\n              animation at the background`}\n              techs={[\"React\", \"Threejs\"]}\n              codeLink={\"\"}\n              siteLink={\"\"}\n              images={[]}\n            />\n            <FeaturedProject\n              reverse={true}\n              title={\"Reversi/Othello\"}\n              desc={`Utilized minimax algorithm with alpha beta pruning and\n              weighted matrix to create a Reversi bot with response\n              time under 1 second`}\n              techs={[\"C\", \"Functional Programming\"]}\n              codeLink={\"\"}\n              siteLink={\"\"}\n              images={[]}\n            />\n            <FeaturedProject\n              title={\"Maskaught\"}\n              desc={`A mask detection designed to be placed outside shops. It\n              utilizes deep learning using tensorflow to train and\n              predict data and Django to create the backend for the\n              web application.`}\n              techs={[\"Django\", \"Tensorflow\", \"Python\"]}\n              codeLink={\"\"}\n              siteLink={\"\"}\n              images={[]}\n            />\n            <FeaturedProject\n              title={\"Eye Can See\"}\n              desc={`A 20/20 vision testing system that utilizes an speech\n              recognition system and an arduino board integration. See\n              project EYE CAN SEE`}\n              techs={[\"HTML\", \"CSS\", \"Javascript\"]}\n              codeLink={\"\"}\n              siteLink={\"\"}\n              images={[]}\n            />\n            <FeaturedProject\n              title={\"ResumaBuilder\"}\n              desc={`Resumabuilder allows you to compare your current resume\n              to your ideal resume, it also gives you a progress\n              tracker to achieve the perfect resume that you want.`}\n              techs={[\"HTML\", \"CSS\", \"Javascript\"]}\n              codeLink={\"\"}\n              siteLink={\"\"}\n              images={[]}\n            />\n          </ProjectArea>\n        </ThemeProvider>\n      </FeaturedProjectsComp>\n    </Element>\n  );\n};\n\nexport default Projects;\n\nconst FeaturedProjectsComp = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  background: black;\n  padding: 10em;\n`;\n\nconst TitleArea = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 50px;\n  @media only screen and (max-width: 600px) {\n    text-align: center;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 26px;\n  font-weight: 500;\n  padding-right: 20px;\n  @media only screen and (min-width: 992px) {\n    font-size: 28px;\n  }\n  @media only screen and (max-width: 600px) {\n    padding: 0;\n    margin: auto;\n  }\n  @media only screen and (max-width: 450px) {\n    font-size: 22px;\n    line-height: 1.5em;\n  }\n  @media only screen and (max-width: 350px) {\n    font-size: 20px;\n  }\n`;\n\nconst TitleHighlight = styled.span`\n  color: ${(props) => props.theme.color};\n`;\n\nconst TitleLineWrapper = styled.div`\n  overflow-x: hidden;\n  flex: 1;\n  height: 20px;\n  padding: 0;\n  @media only screen and (max-width: 600px) {\n    display: none;\n  }\n`;\n\nconst TitleLine = styled.div`\n  flex: 1;\n  height: 1px;\n  padding: 0;\n  background-color: ${(props) => props.theme.color};\n`;\n\nconst ProjectArea = styled.div`\n  width: 100%;\n  align-items: center;\n  display: grid;\n`;\n\nconst theme = {\n  color: \"#ff350d\",\n};\n","import React from \"react\";\nimport Fibre from \"./Components/Background/Fibre\";\nimport AboutMe from \"./Components/AboutMe/AboutMe\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport Projects from \"./Components/Projects/Projects\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Fibre />\n      <AboutMe />\n      <Projects />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}